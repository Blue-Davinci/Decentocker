// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: proto/service.proto

package proto

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GossipServerClient is the client API for GossipServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GossipServerClient interface {
}

type gossipServerClient struct {
	cc grpc.ClientConnInterface
}

func NewGossipServerClient(cc grpc.ClientConnInterface) GossipServerClient {
	return &gossipServerClient{cc}
}

// GossipServerServer is the server API for GossipServer service.
// All implementations must embed UnimplementedGossipServerServer
// for forward compatibility
type GossipServerServer interface {
	mustEmbedUnimplementedGossipServerServer()
}

// UnimplementedGossipServerServer must be embedded to have forward compatible implementations.
type UnimplementedGossipServerServer struct {
}

func (UnimplementedGossipServerServer) mustEmbedUnimplementedGossipServerServer() {}

// UnsafeGossipServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GossipServerServer will
// result in compilation errors.
type UnsafeGossipServerServer interface {
	mustEmbedUnimplementedGossipServerServer()
}

func RegisterGossipServerServer(s grpc.ServiceRegistrar, srv GossipServerServer) {
	s.RegisterService(&GossipServer_ServiceDesc, srv)
}

// GossipServer_ServiceDesc is the grpc.ServiceDesc for GossipServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GossipServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "GossipServer",
	HandlerType: (*GossipServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "proto/service.proto",
}
